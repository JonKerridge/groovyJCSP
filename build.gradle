buildscript {
  repositories {
    jcenter()
    mavenCentral()
  }
}

plugins {
  id "com.jfrog.bintray" version "1.7"
}

group 'groovyJCSP'
version '1.1.3a'       // 1.1.2 = compiled with groovy 2.5; 1.1.3 = compiled with groovy 3

apply plugin: 'java'
apply plugin: 'maven'

//sourceCompatibility = 1.8

Properties properties = new Properties()
try {
  properties.load(project.rootProject.file('local.properties').newDataInputStream())
} catch (Exception e) {
  logger.warn("Missing local.properties - won't be able to upload to Bintray.  \nPlease add local.properties with properties bintray.user and bintray.apikey.")
}


allprojects {
  repositories {
    jcenter()
    mavenCentral()
    // following required for groovy-all:3.0.0
    maven {
      url "https://mvnrepository.com/artifact/org.codehaus.groovy/groovy-all"
    }
  }
  apply plugin: 'maven'
  apply plugin: 'maven-publish'
  apply plugin: 'java'
  apply plugin: 'groovy'
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

if (JavaVersion.current().isJava8Compatible()) {
  allprojects {
    tasks.withType(Javadoc) {
      options.addStringOption('Xdoclint:none', '-quiet')
    }
  }
}

artifacts {
  archives sourcesJar, javadocJar
}

publishing {
  publications {
    MyPublication(MavenPublication) {
      from components.java
      groupId group
      artifactId rootProject.name
      version version

      artifact sourcesJar {
        classifier "sources"
      }
      artifact javadocJar {
        classifier "javadoc"
      }
    }
  }
}

bintray {
  user = properties.containsKey('bintray.user') ? properties.getProperty('bintray.user') : System.getenv('BINTRAY_USER')
  key = properties.containsKey('bintray.apikey') ? properties.getProperty('bintray.apikey') : System.getenv('BINTRAY_API_KEY')
//  println " write keys = $user, $key"
  publications = ['MyPublication']
  pkg {
    repo = 'jcsp'
    name = rootProject.name
    userOrg = user
    licenses = ['Apache-2.0', 'LGPL-2.1']
    vcsUrl = 'https://github.com/JonKerridge/groovyJCSP.git'
    labels = ['csp', 'concurrency', 'parallelism', 'distributed systems', 'jcsp']
    publicDownloadNumbers = true
    version {
      name = project.property('version')
      desc = 'groovyJCSP compiled using groovy-all-3.0.0'
    }
  }
}

dependencies {
//  compile 'org.codehaus.groovy:groovy-all:2.5.2'
  compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '3.0.0-alpha-3'
  compile 'cspforjava:jcsp:1.1.0'
//  testCompile 'org.codehaus.groovy:groovy-all:2.5.2'
  testCompile group: 'org.codehaus.groovy', name: 'groovy-all', version: '3.0.0-alpha-3'
  testCompile 'cspforjava:jcsp:1.1.0'
  testCompile group: 'junit', name: 'junit', version: '4.12'
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.4'
}

task copyLib ( type: Copy){
  def libName = "${rootProject.name}-${version}.jar"
  from "${buildDir}/libs/${libName}"
  into "C:/jcspLib"
}


//task writeNewPom << {
//  pom {
//    project {
//      licenses {
//        license {
//          name 'The Apache Software License, Version 2.0'
//          url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//          distribution 'repo'
//        }
//        license {
//          name 'GNU LGPL Version 2.1 or greater'
//          url 'https://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html'
//          distribution 'repo'
//        }
//      }
//    }
//  }.writeTo("groovyJCSP-1.1.0.pom")
//}

